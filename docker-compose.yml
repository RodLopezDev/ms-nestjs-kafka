version: "3.7"

services:
  api_transaction:
    build: ${APITRANSACTION_SERVICE_PATH}/.
    container_name: api_transaction
    env_file:
      - .env
    environment:
      - PORT=3000
      - MONGO_URI=${APITRANSACTION_MONGO_URI}
      - KAFKA_HOST=${KAFKA_SERVER_HOST}
      - KAFKA_PORT=${KAFKA_SERVER_NETWORK_PORT}
    ports:
      - ${APITRANSACTION_PORT}:3000
    networks:
      - ms_nest_kafka_nw
    depends_on:
      - mongodb
      - kafka
      - kafka_ui

  ms_antifraud:
    build: ${MSANTIFRAUD_SERVICE_PATH}/.
    container_name: ms_antifraud
    env_file:
      - .env
    environment:
      - KAFKA_HOST=${KAFKA_SERVER_HOST}
      - KAFKA_PORT=${KAFKA_SERVER_NETWORK_PORT}
    networks:
      - ms_nest_kafka_nw
    depends_on:
      - mongodb
      - kafka
      - kafka_ui

  mongodb:
    image: mongo:8.0.0-rc5
    container_name: mongodb
    restart: always
    ports:
      - 27017:27017
    environment:
      - MONGO_DATA_DIR=/data/db
      - MONGO_LOG_DIR=/dev/null
    volumes:
      - mongodb:/data/db
    expose:
      - 27017
    networks:
      - ms_nest_kafka_nw

  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - ms_nest_kafka_nw

  kafka:
    image: confluentinc/cp-kafka:7.6.1
    container_name: kafka
    depends_on:
      zookeeper:
        condition: service_started
    ports:
      - ${KAFKA_SERVER_LOCALHOST_PORT}:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:${KAFKA_SERVER_NETWORK_PORT},PLAINTEXT_HOST://localhost:${KAFKA_SERVER_LOCALHOST_PORT}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - ms_nest_kafka_nw
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "kafka-topics --bootstrap-server kafka:${KAFKA_SERVER_NETWORK_PORT} --list",
        ]
      interval: 5s
      timeout: 3s
      retries: 10

  kafka_ui:
    image: provectuslabs/kafka-ui:v0.7.2
    container_name: kafka_ui
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - ${KAFKAUI_PORT}:8080
    environment:
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:${KAFKA_SERVER_NETWORK_PORT}
    networks:
      - ms_nest_kafka_nw

volumes:
  mongodb:

networks:
  ms_nest_kafka_nw:
    driver: bridge
